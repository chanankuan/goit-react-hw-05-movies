{"version":3,"file":"static/js/220.b27b1663.chunk.js","mappings":"gRAGaA,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAQ,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACnBC,EAAAA,EAAAA,IAAU,sCAADC,OACQP,EAAQ,2BAC9CQ,EAAAA,GACA,KAAD,EAHW,OAGXP,EAAAE,EAAAM,KAHOP,EAAID,EAAJC,KAAIC,EAAAO,OAAA,SAKLR,EAAKS,MAAI,wBAAAR,EAAAS,OAAA,GAAAb,EAAA,KACjB,gBAP0Bc,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,K,mBCDdC,EAAOC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mEAMhBC,EAAOH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uVAchBG,EAAQL,EAAAA,EAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kOAalBK,EAAOP,EAAAA,EAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oEAMfO,EAAYT,EAAAA,EAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,4C,SCJjC,EA/Ba,WACX,IAAAS,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BjB,EAAImB,EAAA,GAAEE,EAAOF,EAAA,GACZG,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRxC,EAAesC,GAASG,KAAKJ,GAASK,OACxC,GAAG,CAACJ,KAGFK,EAAAA,EAAAA,KAACtB,EAAI,CAAAuB,SACF5B,EAAK6B,KAAI,SAAA5C,GAAmD,IAAhD6C,EAAS7C,EAAT6C,UAAWC,EAAI9C,EAAJ8C,KAAMC,EAAS/C,EAAT+C,UAAWC,EAAYhD,EAAZgD,aACjCC,EAAaD,EAAY,kCAAArC,OACOqC,G,y4DAGtC,OACEE,EAAAA,EAAAA,MAAC1B,EAAI,CAAAmB,SAAA,EACHD,EAAAA,EAAAA,KAAChB,EAAK,CAACyB,IAAKF,EAAYG,IAAKN,KAC7BJ,EAAAA,EAAAA,KAACd,EAAI,CAAAe,SAAEG,KACPI,EAAAA,EAAAA,MAACpB,EAAS,CAAAa,SAAA,CAAC,cAETD,EAAAA,EAAAA,KAAA,SACCK,OANMF,EAUf,KAGN,C,uDCnCO,IAEMjC,EAAU,CACrByC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,8N","sources":["api-service/cast-service.js","components/Movies/Cast/Cast.styled.jsx","components/Movies/Cast/Cast.jsx","constants.js"],"sourcesContent":["import axios from 'axios';\nimport { options } from 'constants';\n\nexport const getCastDetails = async movie_id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?language=en-US`,\n    options\n  );\n\n  return data.cast;\n};\n","import styled from '@emotion/styled';\n\nexport const Flex = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: stretch;\n  flex-basis: calc((100% - 2 * 10px) / 3);\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 4 * 10px) / 5);\n  }\n  @media screen and (min-width: 1000px) {\n    flex-basis: calc((100% - 6 * 10px) / 7);\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  min-height: 156px;\n  margin-bottom: 5px;\n  flex: 1;\n  @media screen and (min-width: 768px) {\n    min-height: 198px;\n  }\n  @media screen and (min-width: 1000px) {\n    min-height: 188px;\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 0.8rem;\n  margin-bottom: 10px;\n  flex: 1;\n`;\n\nexport const Character = styled.p`\n  font-size: 0.8rem;\n  flex: 1;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastDetails } from 'api-service/cast-service';\nimport { Flex, Item, Image, Name, Character } from './Cast.styled';\nimport defaultImg from '../../../assets/images/nopersonphoto.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCastDetails(movieId).then(setCast).catch();\n  }, [movieId]);\n\n  return (\n    <Flex>\n      {cast.map(({ credit_id, name, character, profile_path }) => {\n        const profileUrl = profile_path\n          ? `https://image.tmdb.org/t/p/w300${profile_path}`\n          : defaultImg;\n\n        return (\n          <Item key={credit_id}>\n            <Image src={profileUrl} alt={name} />\n            <Name>{name}</Name>\n            <Character>\n              Character:\n              <br />\n              {character}\n            </Character>\n          </Item>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Cast;\n","export const API_KEY = '84bfbb25066c9e2a68d7046ad581b0ec';\n\nexport const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NGJmYmIyNTA2NmM5ZTJhNjhkNzA0NmFkNTgxYjBlYyIsInN1YiI6IjY1NmI0YTY5MDg1OWI0MDEzOTUxMmZhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JHtQht9lLzVGn8qQlSLZwC1_-cT8AoKj26qDOrlg0qc',\n  },\n};\n"],"names":["getCastDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movie_id","_yield$axios$get","data","_context","prev","next","axios","concat","options","sent","abrupt","cast","stop","_x","apply","arguments","Flex","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Image","_templateObject3","Name","_templateObject4","Character","_templateObject5","_useState","useState","_useState2","_slicedToArray","setCast","movieId","useParams","useEffect","then","catch","_jsx","children","map","credit_id","name","character","profile_path","profileUrl","_jsxs","src","alt","method","headers","accept","Authorization"],"sourceRoot":""}