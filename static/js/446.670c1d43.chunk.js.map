{"version":3,"file":"static/js/446.670c1d43.chunk.js","mappings":"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","sources":["helpers/transformMovieData.js","api-service/movie-service.js","components/Common.jsx","components/Loader/Loader.jsx","assets/images/star.svg","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","constants.js","assets/images/Search.svg","components/Movies/SearchForm/SearchForm.styled.jsx","components/Movies/SearchForm/SearchForm.jsx","components/Pagination/Pagination.jsx","pages/Movies.jsx"],"sourcesContent":["export const transformMovieData = data => {\n  const {\n    id,\n    imdb_id,\n    original_language,\n    original_title,\n    overview,\n    backdrop_path,\n    poster_path,\n    release_date,\n    tagline,\n    title,\n    vote_average,\n    runtime,\n    genres,\n  } = data;\n  return {\n    id,\n    imdb_id,\n    original_language,\n    original_title,\n    overview,\n    backdrop_path: `https://image.tmdb.org/t/p/w300${backdrop_path}`,\n    poster_path: `https://image.tmdb.org/t/p/w300${poster_path}`,\n    release_date: release_date.slice(0, 4),\n    tagline,\n    title,\n    vote_average,\n    runtime,\n    genres: genres.map(({ name }) => name).join(', '),\n  };\n};\n","import axios from 'axios';\nimport { transformMovieData } from 'helpers';\nimport { options } from 'constants';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    options\n  );\n\n  return data.results;\n};\n\nexport const getBySearchMovies = async (searchQuery, page = 1) => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}`,\n    options\n  );\n\n  console.log(data);\n  return data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}?language=en-US`,\n    options\n  );\n\n  const movie = transformMovieData(data);\n  return movie;\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px;\n  margin: 0 auto;\n  @media screen and (min-width: 375px) {\n    max-width: 375px;\n  }\n  @media screen and (min-width: 768px) {\n    padding-left: 32px;\n    padding-right: 32px;\n    max-width: 768px;\n  }\n  @media screen and (min-width: 980px) {\n    max-width: 980px;\n  }\n`;\n\nexport const Section = styled.section``;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: none;\n  outline: none;\n`;\n","import { Grid } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgStar(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 19,\n    viewBox: \"0 0 22 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11 15.9119L16.3348 18.8277C17.3118 19.3621 18.5073 18.5721 18.2502 17.5731L16.8362 12.09L21.554 8.39594C22.4153 7.72218 21.9525 6.44434 20.8212 6.36303L14.6123 5.88674L12.1827 0.705712C11.7456 -0.235237 10.2544 -0.235237 9.81734 0.705712L7.38773 5.87513L1.17875 6.35141C0.047509 6.43273 -0.415273 7.71056 0.446015 8.38433L5.16381 12.0784L3.74976 17.5615C3.49266 18.5605 4.68818 19.3505 5.66516 18.8161L11 15.9119Z\",\n    fill: \"#FCC209\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStar);\nexport default __webpack_public_path__ + \"static/media/star.c4baa38127e1580cceb5153bf65f5c17.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  row-gap: 20px;\n  margin-bottom: 40px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 20px) / 2);\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 4 * 20px) / 5);\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  display: block;\n  object-fit: cover;\n  aspect-ratio: 0.66;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfo = styled.div``;\n\nexport const MovieTitle = styled.h3`\n  font-weight: 400;\n  font-size: 1rem;\n  margin-bottom: 10px;\n`;\n\nexport const FlexItem = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const MovieYear = styled.p`\n  font-size: 0.8rem;\n  margin-right: 20px;\n`;\n\nexport const MovieRating = styled.p`\n  display: flex;\n  align-items: center;\n  column-gap: 5px;\n  font-size: 0.8rem;\n  & > img {\n    padding-bottom: 2px;\n  }\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport defaultPoster from '../../assets/images/default-movie-poster.jpeg';\nimport star from '../../assets/images/star.svg';\nimport {\n  FlexItem,\n  List,\n  MovieInfo,\n  MovieItem,\n  MoviePoster,\n  MovieRating,\n  MovieTitle,\n  MovieYear,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies, path }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(\n        ({\n          id,\n          title,\n          original_title,\n          release_date,\n          poster_path,\n          vote_average,\n        }) => (\n          <MovieItem key={id}>\n            <Link to={path + id} state={{ from: location }}>\n              <MoviePoster\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                    : defaultPoster\n                }\n                alt={title}\n              />\n              <MovieInfo>\n                <MovieTitle>\n                  {title === original_title\n                    ? title\n                    : `${original_title} (${title})`}\n                </MovieTitle>\n                <FlexItem>\n                  <MovieYear>{release_date.slice(0, 4)}</MovieYear>\n                  <MovieRating>\n                    <img src={star} alt=\"Star icon\" width={15} />\n                    {vote_average === 0 ? '-' : vote_average.toFixed(1)}\n                  </MovieRating>\n                </FlexItem>\n              </MovieInfo>\n            </Link>\n          </MovieItem>\n        )\n      )}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(Object),\n  path: PropTypes.string.isRequired,\n};\n\nexport default MovieList;\n","export const API_KEY = '84bfbb25066c9e2a68d7046ad581b0ec';\n\nexport const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NGJmYmIyNTA2NmM5ZTJhNjhkNzA0NmFkNTgxYjBlYyIsInN1YiI6IjY1NmI0YTY5MDg1OWI0MDEzOTUxMmZhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JHtQht9lLzVGn8qQlSLZwC1_-cT8AoKj26qDOrlg0qc',\n  },\n};\n","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 19,\n    height: 18,\n    viewBox: \"0 0 19 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Search\"\n  }, /*#__PURE__*/React.createElement(\"ellipse\", {\n    id: \"Ellipse_739\",\n    cx: 7.57177,\n    cy: 7.4819,\n    rx: 7.57177,\n    ry: 7.4819,\n    transform: \"matrix(-1 0 0 1 17.178 1)\",\n    stroke: \"#67686D\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Line_181\",\n    d: \"M4.33984 14.0743L1.37128 17\",\n    stroke: \"#67686D\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/Search.0bd2d1e6eb1822ff2c44bd4427254f8d.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\nimport search from '../../../assets/images/Search.svg';\n\nexport const Title = styled.h1`\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin-bottom: 24px;\n`;\nexport const Form = styled.form`\n  font-size: 0.8rem;\n  line-height: 150%;\n  display: flex;\n  width: 100%;\n  max-width: 375px;\n  border-radius: 16px;\n  background: #3a3f47;\n  padding: 10px 25px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 90%;\n  height: 100%;\n  color: #fff;\n  background: #3a3f47;\n  border: none;\n  outline: none;\n  padding: 0;\n  &::placeholder {\n    color: #67686d;\n  }\n`;\n\nexport const Submit = styled.input`\n  width: 10%;\n  background-image: ${`url(${search})`};\n  background-repeat: no-repeat;\n  background-position: right center;\n  border: none;\n  background-color: #3a3f47;\n  padding: 0;\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Submit } from './SearchForm.styled';\n\nconst SearchForm = ({ handleSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    handleSubmit(value);\n  };\n\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Search\"\n          value={value}\n          onChange={handleChange}\n        />\n        <Submit type=\"submit\" value=\"\" />\n      </Form>\n    </>\n  );\n};\n\nSearchForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { useSearchParams } from 'react-router-dom';\n\nconst PaginationRounded = ({ totalPages, handleChangePage }) => {\n  const [searchParams] = useSearchParams();\n  const page = Number(searchParams.get('page')) || 1;\n\n  return (\n    <Stack spacing={2} alignItems=\"center\">\n      <Pagination\n        count={totalPages}\n        variant=\"outlined\"\n        shape=\"rounded\"\n        onChange={handleChangePage}\n        color=\"primary\"\n        page={page}\n      />\n    </Stack>\n  );\n};\n\nexport default PaginationRounded;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Container, Section } from 'components/Common';\nimport SearchForm from 'components/Movies/SearchForm/SearchForm';\nimport MovieList from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Title } from 'components/Movies/SearchForm/SearchForm.styled';\nimport { getBySearchMovies } from 'api-service/movie-service';\nimport PaginationRounded from 'components/Pagination/Pagination';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [noResults, setNoResults] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const movie = searchParams.get('query');\n    const page = searchParams.get('page') || 1;\n\n    if (!movie) return;\n\n    setLoading(true);\n    getBySearchMovies(movie, page)\n      .then(({ results, total_pages }) => {\n        results.length === 0 ? setNoResults(true) : setNoResults(false);\n        setMovies(results);\n        setTotalPages(total_pages);\n      })\n      .catch(() => {\n        Notify.failure('Opps. Something went wrong. Please refresh the page');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [searchParams]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query: query });\n  };\n\n  const handleChangePage = (_, newPage) => {\n    const movie = searchParams.get('query');\n    setSearchParams({ query: movie, page: newPage });\n  };\n\n  return (\n    <>\n      <Section>\n        <Container>\n          <Title>What do you want to watch?</Title>\n          <SearchForm handleSubmit={handleSubmit} />\n\n          <MovieList movies={movies} path=\"\" />\n          {loading && <Loader />}\n          {noResults && <h2>No results. Please try another search.</h2>}\n\n          {totalPages > 1 && (\n            <PaginationRounded\n              totalPages={totalPages}\n              handleChangePage={handleChangePage}\n            />\n          )}\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["transformMovieData","data","id","imdb_id","original_language","original_title","overview","backdrop_path","poster_path","release_date","tagline","title","vote_average","runtime","genres","concat","slice","map","_ref","name","join","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","axios","options","sent","abrupt","results","stop","apply","arguments","getBySearchMovies","_ref2","_callee2","searchQuery","page","_yield$axios$get2","_args2","_context2","length","undefined","console","log","_x","getMovieDetails","_ref3","_callee3","movie_id","_yield$axios$get3","movie","_context3","_x2","Container","styled","_templateObject","_taggedTemplateLiteral","Section","_templateObject2","Button","_templateObject3","Loader","_jsx","_Fragment","children","Grid","color","height","width","wrapperStyle","position","top","left","transform","List","MovieItem","MoviePoster","MovieInfo","_templateObject4","MovieTitle","_templateObject5","FlexItem","_templateObject6","MovieYear","_templateObject7","MovieRating","_templateObject8","movies","path","location","useLocation","_jsxs","Link","to","state","from","src","defaultPoster","alt","star","toFixed","method","headers","accept","Authorization","Title","Form","Input","Submit","search","handleSubmit","_useState","useState","_useState2","_slicedToArray","value","setValue","onSubmit","event","preventDefault","type","placeholder","onChange","target","totalPages","handleChangePage","_useSearchParams","useSearchParams","searchParams","Number","get","Stack","spacing","alignItems","Pagination","count","variant","shape","setMovies","_useState3","_useState4","setTotalPages","_useState5","_useState6","loading","setLoading","_useState7","_useState8","noResults","setNoResults","_useSearchParams2","setSearchParams","useEffect","then","total_pages","catch","Notify","finally","SearchForm","query","MovieList","PaginationRounded","_","newPage"],"sourceRoot":""}