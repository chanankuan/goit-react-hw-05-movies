{"version":3,"file":"static/js/815.4f82f850.chunk.js","mappings":"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","sources":["helpers/transformMovieData.js","constants.js","api-service/movie-service.js","components/Movies/Cast/Cast.styled.jsx","components/Movies/Cast/Cast.jsx"],"sourcesContent":["export const transformMovieData = data => {\n  const {\n    id,\n    imdb_id,\n    original_language,\n    original_title,\n    overview,\n    backdrop_path,\n    poster_path,\n    release_date,\n    tagline,\n    title,\n    vote_average,\n    runtime,\n    genres,\n  } = data;\n  return {\n    id,\n    imdb_id,\n    original_language,\n    original_title,\n    overview,\n    backdrop_path: `https://image.tmdb.org/t/p/w300${backdrop_path}`,\n    poster_path: `https://image.tmdb.org/t/p/w300${poster_path}`,\n    release_date: release_date.slice(0, 4),\n    tagline,\n    title,\n    vote_average,\n    runtime,\n    genres: genres.map(({ name }) => name).join(', '),\n  };\n};\n","export const API_KEY = '84bfbb25066c9e2a68d7046ad581b0ec';\n\nexport const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NGJmYmIyNTA2NmM5ZTJhNjhkNzA0NmFkNTgxYjBlYyIsInN1YiI6IjY1NmI0YTY5MDg1OWI0MDEzOTUxMmZhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JHtQht9lLzVGn8qQlSLZwC1_-cT8AoKj26qDOrlg0qc',\n  },\n};\n","import axios from 'axios';\nimport { transformMovieData } from 'helpers';\nimport { options } from 'constants';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// get trending movies\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    'trending/movie/day?language=en-US',\n    options\n  );\n\n  return data.results;\n};\n\n// get movies by searching\nexport const getBySearchMovies = async (searchQuery, page = 1) => {\n  const { data } = await axios.get(\n    `search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}`,\n    options\n  );\n\n  console.log(data);\n  return data;\n};\n\n// get reviews of a movie\nexport const getMovieDetails = async movie_id => {\n  const { data } = await axios.get(`movie/${movie_id}?language=en-US`, options);\n\n  const movie = transformMovieData(data);\n  return movie;\n};\n\n// get reviews data\nexport const getReviewsDetails = async movie_id => {\n  const { data } = await axios.get(\n    `movie/${movie_id}/reviews?language=en-US`,\n    options\n  );\n\n  return data.results;\n};\n\n// get cast list of a movie\nexport const getCastDetails = async movie_id => {\n  const { data } = await axios.get(\n    `movie/${movie_id}/credits?language=en-US`,\n    options\n  );\n\n  return data.cast;\n};\n","import styled from '@emotion/styled';\n\nexport const Flex = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: stretch;\n  flex-basis: calc((100% - 2 * 10px) / 3);\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 4 * 10px) / 5);\n  }\n  @media screen and (min-width: 1000px) {\n    flex-basis: calc((100% - 6 * 10px) / 7);\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  min-height: 156px;\n  margin-bottom: 5px;\n  flex: 1;\n  @media screen and (min-width: 768px) {\n    min-height: 198px;\n  }\n  @media screen and (min-width: 1000px) {\n    min-height: 188px;\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 0.8rem;\n  margin-bottom: 10px;\n  flex: 1;\n`;\n\nexport const Character = styled.p`\n  font-size: 0.8rem;\n  flex: 1;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastDetails } from 'api-service/movie-service';\nimport { Flex, Item, Image, Name, Character } from './Cast.styled';\nimport defaultImg from '../../../assets/images/nopersonphoto.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCastDetails(movieId).then(setCast).catch();\n  }, [movieId]);\n\n  return (\n    <Flex>\n      {cast.map(({ credit_id, name, character, profile_path }) => {\n        const profileUrl = profile_path\n          ? `https://image.tmdb.org/t/p/w300${profile_path}`\n          : defaultImg;\n\n        return (\n          <Item key={credit_id}>\n            <Image src={profileUrl} alt={name} />\n            <Name>{name}</Name>\n            <Character>\n              Character:\n              <br />\n              {character}\n            </Character>\n          </Item>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default Cast;\n"],"names":["transformMovieData","data","id","imdb_id","original_language","original_title","overview","backdrop_path","poster_path","release_date","tagline","title","vote_average","runtime","genres","concat","slice","map","_ref","name","join","options","method","headers","accept","Authorization","axios","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","sent","abrupt","results","stop","apply","arguments","getBySearchMovies","_ref2","_callee2","searchQuery","page","_yield$axios$get2","_args2","_context2","length","undefined","console","log","_x","getMovieDetails","_ref3","_callee3","movie_id","_yield$axios$get3","movie","_context3","_x2","getReviewsDetails","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getCastDetails","_ref5","_callee5","_yield$axios$get5","_context5","cast","_x4","Flex","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Image","_templateObject3","Name","_templateObject4","Character","_templateObject5","_useState","useState","_useState2","_slicedToArray","setCast","movieId","useParams","useEffect","then","catch","_jsx","children","credit_id","character","profile_path","profileUrl","_jsxs","src","alt"],"sourceRoot":""}