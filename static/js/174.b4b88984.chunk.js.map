{"version":3,"file":"static/js/174.b4b88984.chunk.js","mappings":"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","sources":["helpers/transformMovieData.js","constants.js","api-service/movie-service.js","components/Common.jsx","components/Loader/Loader.jsx","assets/images/star.svg","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Home/HomeTitle/HomeTitle.styled.jsx","components/Home/HomeTitle/HomeTitle.jsx","pages/Home.jsx"],"sourcesContent":["import defaultBackdrop from '../assets/images/default-backdrop.jpeg';\nimport defaultPoster from '../assets/images/default-movie-poster.jpeg';\n\nexport const transformMovieData = data => {\n  const {\n    id,\n    imdb_id,\n    original_language,\n    original_title,\n    overview,\n    backdrop_path,\n    poster_path,\n    release_date,\n    tagline,\n    title,\n    vote_average,\n    runtime,\n    genres,\n  } = data;\n  return {\n    id,\n    imdb_id,\n    original_language,\n    original_title,\n    overview,\n    backdrop_path: backdrop_path\n      ? `https://image.tmdb.org/t/p/w300${backdrop_path}`\n      : defaultBackdrop,\n    poster_path: poster_path\n      ? `https://image.tmdb.org/t/p/w300${poster_path}`\n      : defaultPoster,\n    release_date: release_date.slice(0, 4),\n    tagline,\n    title,\n    vote_average,\n    runtime,\n    genres: genres.map(({ name }) => name).join(', '),\n  };\n};\n","export const API_KEY = '84bfbb25066c9e2a68d7046ad581b0ec';\n\nexport const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NGJmYmIyNTA2NmM5ZTJhNjhkNzA0NmFkNTgxYjBlYyIsInN1YiI6IjY1NmI0YTY5MDg1OWI0MDEzOTUxMmZhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JHtQht9lLzVGn8qQlSLZwC1_-cT8AoKj26qDOrlg0qc',\n  },\n};\n","import axios from 'axios';\nimport { transformMovieData } from 'helpers';\nimport { options } from 'constants';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// get trending movies\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    'trending/movie/day?language=en-US',\n    options\n  );\n\n  return data.results;\n};\n\n// get movies by searching\nexport const getBySearchMovies = async (searchQuery, page) => {\n  const { data } = await axios.get(\n    `search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}`,\n    options\n  );\n\n  return data;\n};\n\n// get reviews of a movie\nexport const getMovieDetails = async movie_id => {\n  const { data } = await axios.get(`movie/${movie_id}?language=en-US`, options);\n\n  const movie = transformMovieData(data);\n  return movie;\n};\n\n// get reviews data\nexport const getReviewsDetails = async movie_id => {\n  const { data } = await axios.get(\n    `movie/${movie_id}/reviews?language=en-US`,\n    options\n  );\n\n  return data.results;\n};\n\n// get cast list of a movie\nexport const getCastDetails = async movie_id => {\n  const { data } = await axios.get(\n    `movie/${movie_id}/credits?language=en-US`,\n    options\n  );\n\n  return data.cast;\n};\n\n//get movie trailer\nexport const getMovieVideo = async movie_id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/videos?language=en-US`,\n    options\n  );\n\n  return data.results.filter(result => result.name === 'Official Trailer')[0];\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px;\n  margin: 0 auto;\n  @media screen and (min-width: 375px) {\n    max-width: 375px;\n  }\n  @media screen and (min-width: 768px) {\n    padding-left: 32px;\n    padding-right: 32px;\n    max-width: 768px;\n  }\n  @media screen and (min-width: 980px) {\n    max-width: 980px;\n  }\n`;\n\nexport const Section = styled.section``;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: none;\n  outline: none;\n  padding: 0;\n`;\n","import { Grid } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        width: '100vw',\n        height: '100vh',\n        backdropFilter: 'blur(10px)',\n        zIndex: 999,\n      }}\n    >\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </div>\n  );\n};\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgStar(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 19,\n    viewBox: \"0 0 22 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11 15.9119L16.3348 18.8277C17.3118 19.3621 18.5073 18.5721 18.2502 17.5731L16.8362 12.09L21.554 8.39594C22.4153 7.72218 21.9525 6.44434 20.8212 6.36303L14.6123 5.88674L12.1827 0.705712C11.7456 -0.235237 10.2544 -0.235237 9.81734 0.705712L7.38773 5.87513L1.17875 6.35141C0.047509 6.43273 -0.415273 7.71056 0.446015 8.38433L5.16381 12.0784L3.74976 17.5615C3.49266 18.5605 4.68818 19.3505 5.66516 18.8161L11 15.9119Z\",\n    fill: \"#FCC209\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStar);\nexport default __webpack_public_path__ + \"static/media/star.c4baa38127e1580cceb5153bf65f5c17.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  row-gap: 20px;\n  margin-bottom: 40px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 20px) / 2);\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 4 * 20px) / 5);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport const MoviePoster = styled.img`\n  display: block;\n  object-fit: cover;\n  aspect-ratio: 0.66;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`;\n\nexport const MovieTitle = styled.h3`\n  flex: 1;\n  font-weight: 400;\n  font-size: 1rem;\n  margin-bottom: 10px;\n`;\n\nexport const FlexItem = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const MovieYear = styled.p`\n  font-size: 0.8rem;\n  margin-right: 20px;\n  line-height: 150%;\n`;\n\nexport const MovieRating = styled.p`\n  display: flex;\n  column-gap: 5px;\n  font-size: 0.8rem;\n  line-height: 150%;\n  & > img {\n    padding-bottom: 2px;\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport defaultPoster from '../../assets/images/default-movie-poster.jpeg';\nimport star from '../../assets/images/star.svg';\nimport {\n  FlexItem,\n  List,\n  MovieInfo,\n  MovieItem,\n  MoviePoster,\n  MovieRating,\n  MovieTitle,\n  MovieYear,\n  StyledLink,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List name=\"movieList\">\n      {movies.map(\n        ({\n          id,\n          title,\n          original_title,\n          release_date,\n          poster_path,\n          vote_average,\n        }) => (\n          <MovieItem key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              <MoviePoster\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                    : defaultPoster\n                }\n                alt={title}\n              />\n              <MovieInfo>\n                <MovieTitle>\n                  {title === original_title\n                    ? title\n                    : `${original_title} (${title})`}\n                </MovieTitle>\n                <FlexItem>\n                  <MovieYear>\n                    {release_date ? release_date.slice(0, 4) : '-'}\n                  </MovieYear>\n                  <MovieRating>\n                    <img src={star} alt=\"Star icon\" width={15} />\n                    {vote_average ? vote_average.toFixed(1) : '-'}\n                  </MovieRating>\n                </FlexItem>\n              </MovieInfo>\n            </StyledLink>\n          </MovieItem>\n        )\n      )}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(Object),\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  & > h2 {\n    font-size: 1.2rem;\n    margin-right: 20px;\n  }\n\n  & > div {\n    width: 100%;\n    position: relative;\n  }\n  & > div::after {\n    position: absolute;\n    content: '';\n    top: 50%;\n    right: 0;\n    width: inherit;\n    height: 2px;\n    background-color: #504a7950;\n  }\n`;\n","import React from 'react';\nimport { Title } from './HomeTitle.styled';\n\nconst HomeTitle = () => {\n  return (\n    <Title>\n      <h2>Trending</h2>\n      <div></div>\n    </Title>\n  );\n};\n\nexport default HomeTitle;\n","import React, { useEffect, useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport HomeTitle from 'components/Home/HomeTitle/HomeTitle';\nimport MovieList from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { getTrendingMovies } from 'api-service/movie-service';\nimport { Container, Section } from 'components/Common';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getTrendingMovies()\n      .then(setMovies)\n      .catch(() => {\n        Notify.failure('Oops. Something went wrong. Please refresh the page');\n      })\n      .finally(setLoading(false));\n  }, []);\n\n  return (\n    <Section>\n      <Container>\n        <HomeTitle />\n        <MovieList movies={movies} />\n\n        {loading && <Loader />}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Home;\n"],"names":["transformMovieData","data","id","imdb_id","original_language","original_title","overview","backdrop_path","poster_path","release_date","tagline","title","vote_average","runtime","genres","concat","defaultBackdrop","defaultPoster","slice","map","_ref","name","join","options","method","headers","accept","Authorization","axios","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","sent","abrupt","results","stop","apply","arguments","getBySearchMovies","_ref2","_callee2","searchQuery","page","_yield$axios$get2","_context2","_x","_x2","getMovieDetails","_ref3","_callee3","movie_id","_yield$axios$get3","movie","_context3","_x3","getReviewsDetails","_ref4","_callee4","_yield$axios$get4","_context4","_x4","getCastDetails","_ref5","_callee5","_yield$axios$get5","_context5","cast","_x5","getMovieVideo","_ref6","_callee6","_yield$axios$get6","_context6","filter","result","_x6","Container","styled","_templateObject","_taggedTemplateLiteral","Section","_templateObject2","Button","_templateObject3","Loader","_jsx","style","position","left","top","width","height","backdropFilter","zIndex","children","Grid","color","wrapperStyle","transform","List","MovieItem","StyledLink","Link","MoviePoster","_templateObject4","MovieInfo","_templateObject5","MovieTitle","_templateObject6","FlexItem","_templateObject7","MovieYear","_templateObject8","MovieRating","_templateObject9","movies","location","useLocation","_jsxs","to","state","from","src","alt","star","toFixed","Title","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loading","setLoading","useEffect","then","catch","Notify","finally","HomeTitle","MovieList"],"sourceRoot":""}