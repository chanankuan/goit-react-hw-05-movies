{"version":3,"file":"static/js/257.c6853d5b.chunk.js","mappings":"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","sources":["helpers/transformMovieData.js","constants.js","api-service/movie-service.js","components/Common.jsx","components/Loader/Loader.jsx","assets/images/star.svg","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Home/HomeTitle/HomeTitle.styled.jsx","components/Home/HomeTitle/HomeTitle.jsx","pages/Home.jsx"],"sourcesContent":["export const transformMovieData = data => {\n  const {\n    id,\n    imdb_id,\n    original_language,\n    original_title,\n    overview,\n    backdrop_path,\n    poster_path,\n    release_date,\n    tagline,\n    title,\n    vote_average,\n    runtime,\n    genres,\n  } = data;\n  return {\n    id,\n    imdb_id,\n    original_language,\n    original_title,\n    overview,\n    backdrop_path: `https://image.tmdb.org/t/p/w300${backdrop_path}`,\n    poster_path: `https://image.tmdb.org/t/p/w300${poster_path}`,\n    release_date: release_date.slice(0, 4),\n    tagline,\n    title,\n    vote_average,\n    runtime,\n    genres: genres.map(({ name }) => name).join(', '),\n  };\n};\n","export const API_KEY = '84bfbb25066c9e2a68d7046ad581b0ec';\n\nexport const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NGJmYmIyNTA2NmM5ZTJhNjhkNzA0NmFkNTgxYjBlYyIsInN1YiI6IjY1NmI0YTY5MDg1OWI0MDEzOTUxMmZhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JHtQht9lLzVGn8qQlSLZwC1_-cT8AoKj26qDOrlg0qc',\n  },\n};\n","import axios from 'axios';\nimport { transformMovieData } from 'helpers';\nimport { options } from 'constants';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// get trending movies\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    'trending/movie/day?language=en-US',\n    options\n  );\n\n  return data.results;\n};\n\n// get movies by searching\nexport const getBySearchMovies = async (searchQuery, page = 1) => {\n  const { data } = await axios.get(\n    `search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}`,\n    options\n  );\n\n  console.log(data);\n  return data;\n};\n\n// get reviews of a movie\nexport const getMovieDetails = async movie_id => {\n  const { data } = await axios.get(`movie/${movie_id}?language=en-US`, options);\n\n  const movie = transformMovieData(data);\n  return movie;\n};\n\n// get reviews data\nexport const getReviewsDetails = async movie_id => {\n  const { data } = await axios.get(\n    `movie/${movie_id}/reviews?language=en-US`,\n    options\n  );\n\n  return data.results;\n};\n\n// get cast list of a movie\nexport const getCastDetails = async movie_id => {\n  const { data } = await axios.get(\n    `movie/${movie_id}/credits?language=en-US`,\n    options\n  );\n\n  return data.cast;\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px;\n  margin: 0 auto;\n  @media screen and (min-width: 375px) {\n    max-width: 375px;\n  }\n  @media screen and (min-width: 768px) {\n    padding-left: 32px;\n    padding-right: 32px;\n    max-width: 768px;\n  }\n  @media screen and (min-width: 980px) {\n    max-width: 980px;\n  }\n`;\n\nexport const Section = styled.section``;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: none;\n  outline: none;\n`;\n","import { Grid } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgStar(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 19,\n    viewBox: \"0 0 22 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11 15.9119L16.3348 18.8277C17.3118 19.3621 18.5073 18.5721 18.2502 17.5731L16.8362 12.09L21.554 8.39594C22.4153 7.72218 21.9525 6.44434 20.8212 6.36303L14.6123 5.88674L12.1827 0.705712C11.7456 -0.235237 10.2544 -0.235237 9.81734 0.705712L7.38773 5.87513L1.17875 6.35141C0.047509 6.43273 -0.415273 7.71056 0.446015 8.38433L5.16381 12.0784L3.74976 17.5615C3.49266 18.5605 4.68818 19.3505 5.66516 18.8161L11 15.9119Z\",\n    fill: \"#FCC209\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStar);\nexport default __webpack_public_path__ + \"static/media/star.c4baa38127e1580cceb5153bf65f5c17.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  row-gap: 20px;\n  margin-bottom: 40px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 20px) / 2);\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 4 * 20px) / 5);\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  display: block;\n  object-fit: cover;\n  aspect-ratio: 0.66;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfo = styled.div``;\n\nexport const MovieTitle = styled.h3`\n  font-weight: 400;\n  font-size: 1rem;\n  margin-bottom: 10px;\n`;\n\nexport const FlexItem = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const MovieYear = styled.p`\n  font-size: 0.8rem;\n  margin-right: 20px;\n`;\n\nexport const MovieRating = styled.p`\n  display: flex;\n  align-items: center;\n  column-gap: 5px;\n  font-size: 0.8rem;\n  & > img {\n    padding-bottom: 2px;\n  }\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport defaultPoster from '../../assets/images/default-movie-poster.jpeg';\nimport star from '../../assets/images/star.svg';\nimport {\n  FlexItem,\n  List,\n  MovieInfo,\n  MovieItem,\n  MoviePoster,\n  MovieRating,\n  MovieTitle,\n  MovieYear,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies, path }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(\n        ({\n          id,\n          title,\n          original_title,\n          release_date,\n          poster_path,\n          vote_average,\n        }) => (\n          <MovieItem key={id}>\n            <Link to={path + id} state={{ from: location }}>\n              <MoviePoster\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                    : defaultPoster\n                }\n                alt={title}\n              />\n              <MovieInfo>\n                <MovieTitle>\n                  {title === original_title\n                    ? title\n                    : `${original_title} (${title})`}\n                </MovieTitle>\n                <FlexItem>\n                  <MovieYear>{release_date.slice(0, 4)}</MovieYear>\n                  <MovieRating>\n                    <img src={star} alt=\"Star icon\" width={15} />\n                    {vote_average === 0 ? '-' : vote_average.toFixed(1)}\n                  </MovieRating>\n                </FlexItem>\n              </MovieInfo>\n            </Link>\n          </MovieItem>\n        )\n      )}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(Object),\n  path: PropTypes.string.isRequired,\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  & > h2 {\n    font-size: 1.2rem;\n    margin-right: 20px;\n  }\n\n  & > div {\n    width: 100%;\n    position: relative;\n  }\n  & > div::after {\n    position: absolute;\n    content: '';\n    top: 50%;\n    right: 0;\n    width: inherit;\n    height: 2px;\n    background-color: #504a7950;\n  }\n`;\n","import React from 'react';\nimport { Title } from './HomeTitle.styled';\n\nconst HomeTitle = () => {\n  return (\n    <Title>\n      <h2>Trending</h2>\n      <div></div>\n    </Title>\n  );\n};\n\nexport default HomeTitle;\n","import React, { useEffect, useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport HomeTitle from 'components/Home/HomeTitle/HomeTitle';\nimport MovieList from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { getTrendingMovies } from 'api-service/movie-service';\nimport { Container, Section } from 'components/Common';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getTrendingMovies()\n      .then(setMovies)\n      .catch(() => {\n        Notify.failure('Opps. Something went wrong. Please refresh the page');\n      })\n      .finally(setLoading(false));\n  }, []);\n\n  return (\n    <Section>\n      <Container>\n        <HomeTitle />\n        <MovieList movies={movies} path=\"movies/\" />\n\n        {loading && <Loader />}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Home;\n"],"names":["transformMovieData","data","id","imdb_id","original_language","original_title","overview","backdrop_path","poster_path","release_date","tagline","title","vote_average","runtime","genres","concat","slice","map","_ref","name","join","options","method","headers","accept","Authorization","axios","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","sent","abrupt","results","stop","apply","arguments","getBySearchMovies","_ref2","_callee2","searchQuery","page","_yield$axios$get2","_args2","_context2","length","undefined","console","log","_x","getMovieDetails","_ref3","_callee3","movie_id","_yield$axios$get3","movie","_context3","_x2","getReviewsDetails","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getCastDetails","_ref5","_callee5","_yield$axios$get5","_context5","cast","_x4","Container","styled","_templateObject","_taggedTemplateLiteral","Section","_templateObject2","Button","_templateObject3","Loader","_jsx","_Fragment","children","Grid","color","height","width","wrapperStyle","position","top","left","transform","List","MovieItem","MoviePoster","MovieInfo","_templateObject4","MovieTitle","_templateObject5","FlexItem","_templateObject6","MovieYear","_templateObject7","MovieRating","_templateObject8","movies","path","location","useLocation","_jsxs","Link","to","state","from","src","defaultPoster","alt","star","toFixed","Title","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loading","setLoading","useEffect","then","catch","Notify","finally","HomeTitle","MovieList"],"sourceRoot":""}