{"version":3,"file":"static/js/643.13263f67.chunk.js","mappings":"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","sources":["helpers/transformMovieData.js","constants.js","api-service/movie-service.js","components/Common.jsx","components/Movies/Cast/Cast.styled.jsx","components/Movies/Cast/Cast.jsx"],"sourcesContent":["import defaultBackdrop from '../assets/images/default-backdrop.jpeg';\nimport defaultPoster from '../assets/images/default-movie-poster.jpeg';\n\nexport const transformMovieData = data => {\n  const {\n    id,\n    imdb_id,\n    original_language,\n    original_title,\n    overview,\n    backdrop_path,\n    poster_path,\n    release_date,\n    tagline,\n    title,\n    vote_average,\n    runtime,\n    genres,\n  } = data;\n  return {\n    id,\n    imdb_id,\n    original_language,\n    original_title,\n    overview,\n    backdrop_path: backdrop_path\n      ? `https://image.tmdb.org/t/p/w300${backdrop_path}`\n      : defaultBackdrop,\n    poster_path: poster_path\n      ? `https://image.tmdb.org/t/p/w300${poster_path}`\n      : defaultPoster,\n    release_date: release_date.slice(0, 4),\n    tagline,\n    title,\n    vote_average,\n    runtime,\n    genres: genres.map(({ name }) => name).join(', '),\n  };\n};\n","export const API_KEY = '84bfbb25066c9e2a68d7046ad581b0ec';\n\nexport const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NGJmYmIyNTA2NmM5ZTJhNjhkNzA0NmFkNTgxYjBlYyIsInN1YiI6IjY1NmI0YTY5MDg1OWI0MDEzOTUxMmZhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JHtQht9lLzVGn8qQlSLZwC1_-cT8AoKj26qDOrlg0qc',\n  },\n};\n","import axios from 'axios';\nimport { transformMovieData } from 'helpers';\nimport { options } from 'constants';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// get trending movies\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    'trending/movie/day?language=en-US',\n    options\n  );\n\n  return data.results;\n};\n\n// get movies by searching\nexport const getBySearchMovies = async (searchQuery, page) => {\n  const { data } = await axios.get(\n    `search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=${page}`,\n    options\n  );\n\n  return data;\n};\n\n// get reviews of a movie\nexport const getMovieDetails = async movie_id => {\n  const { data } = await axios.get(`movie/${movie_id}?language=en-US`, options);\n\n  const movie = transformMovieData(data);\n  return movie;\n};\n\n// get reviews data\nexport const getReviewsDetails = async movie_id => {\n  const { data } = await axios.get(\n    `movie/${movie_id}/reviews?language=en-US`,\n    options\n  );\n\n  return data.results;\n};\n\n// get cast list of a movie\nexport const getCastDetails = async movie_id => {\n  const { data } = await axios.get(\n    `movie/${movie_id}/credits?language=en-US`,\n    options\n  );\n\n  return data.cast;\n};\n\n//get movie trailer\nexport const getMovieVideo = async movie_id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/videos?language=en-US`,\n    options\n  );\n\n  return data.results.filter(result => result.name === 'Official Trailer')[0];\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px;\n  margin: 0 auto;\n  @media screen and (min-width: 375px) {\n    max-width: 375px;\n  }\n  @media screen and (min-width: 768px) {\n    padding-left: 32px;\n    padding-right: 32px;\n    max-width: 768px;\n  }\n  @media screen and (min-width: 980px) {\n    max-width: 980px;\n  }\n`;\n\nexport const Section = styled.section``;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: none;\n  outline: none;\n`;\n","import styled from '@emotion/styled';\n\nexport const Flex = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: stretch;\n  flex-basis: calc((100% - 2 * 10px) / 3);\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 4 * 10px) / 5);\n  }\n  @media screen and (min-width: 1000px) {\n    flex-basis: calc((100% - 6 * 10px) / 7);\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  min-height: 156px;\n  margin-bottom: 5px;\n  flex: 1;\n  @media screen and (min-width: 768px) {\n    min-height: 198px;\n  }\n  @media screen and (min-width: 1000px) {\n    min-height: 188px;\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 0.8rem;\n  margin-bottom: 10px;\n  flex: 1;\n`;\n\nexport const Character = styled.p`\n  font-size: 0.8rem;\n  flex: 1;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastDetails } from 'api-service/movie-service';\nimport { Flex, Item, Image, Name, Character } from './Cast.styled';\nimport defaultImg from '../../../assets/images/nopersonphoto.png';\nimport { Container, Section } from 'components/Common';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCastDetails(movieId).then(setCast).catch();\n  }, [movieId]);\n\n  return (\n    <Section>\n      <Container>\n        <Flex>\n          {cast.map(({ credit_id, name, character, profile_path }) => {\n            const profileUrl = profile_path\n              ? `https://image.tmdb.org/t/p/w300${profile_path}`\n              : defaultImg;\n\n            return (\n              <Item key={credit_id}>\n                <Image src={profileUrl} alt={name} />\n                <Name>{name}</Name>\n                <Character>\n                  Character:\n                  <br />\n                  {character}\n                </Character>\n              </Item>\n            );\n          })}\n        </Flex>\n      </Container>\n    </Section>\n  );\n};\n\nexport default Cast;\n"],"names":["transformMovieData","data","id","imdb_id","original_language","original_title","overview","backdrop_path","poster_path","release_date","tagline","title","vote_average","runtime","genres","concat","defaultBackdrop","defaultPoster","slice","map","_ref","name","join","options","method","headers","accept","Authorization","axios","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","sent","abrupt","results","stop","apply","arguments","getBySearchMovies","_ref2","_callee2","searchQuery","page","_yield$axios$get2","_context2","_x","_x2","getMovieDetails","_ref3","_callee3","movie_id","_yield$axios$get3","movie","_context3","_x3","getReviewsDetails","_ref4","_callee4","_yield$axios$get4","_context4","_x4","getCastDetails","_ref5","_callee5","_yield$axios$get5","_context5","cast","_x5","getMovieVideo","_ref6","_callee6","_yield$axios$get6","_context6","filter","result","_x6","Container","styled","_templateObject","_taggedTemplateLiteral","Section","_templateObject2","Button","_templateObject3","Flex","Item","Image","Name","_templateObject4","Character","_templateObject5","_useState","useState","_useState2","_slicedToArray","setCast","movieId","useParams","useEffect","then","catch","_jsx","children","credit_id","character","profile_path","profileUrl","_jsxs","src","alt"],"sourceRoot":""}